step_time(datetime, features="hour") %>%
step_dummy(all_nominal_predictors()) %>%
step_normalize(all_numeric_predictors())
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataSet13
bake(prepped_recipe, new_data=train_ud)
auto_model <- auto_ml() %>%
set_engine("h2o", max_runtime_secs=0.01, max_models=1) %>%
set_mode("regression")
auto_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(auto_model) %>%
fit(data=train_ud)
## Run all the steps on test data15
auto_predictions <- predict(auto_workflow, new_data = test)
auto_model <- auto_ml() %>%
set_engine("h2o", max_runtime_secs=0.01, max_models=1) %>%
set_mode("regression")
auto_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(auto_model) %>%
fit(data=train_ud)
## Run all the steps on test data15
auto_predictions <- predict(auto_workflow, new_data = test)
auto_predictions
kaggle_submission <- auto_predictions %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(count = exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=",")
my_recipe <- recipe(count ~., data=train_ud) %>%
step_mutate(weather= factor(ifelse(weather == "4", "3", weather),
levels=c("1","2","3"),
labels=c("Clear", "Mist", "Light Snow"))) %>%
step_mutate(season = factor(season, levels=c("1","2","3","4"),
labels=c("Spring","Summer","Fall","Winter"))) %>%
#step_time(datetime, features="am")%>%
step_time(datetime, features="hour") %>%
step_dummy(all_nominal_predictors()) %>%
step_normalize(all_numeric_predictors())
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataSet13
bake(prepped_recipe, new_data=train_ud)
auto_model <- auto_ml() %>%
set_engine("h2o", max_runtime_secs=0.01, max_models=5) %>%
set_mode("regression")
auto_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(auto_model) %>%
fit(data=train_ud)
## Run all the steps on test data15
auto_predictions <- predict(auto_workflow, new_data = test)
auto_predictions
kaggle_submission <- auto_predictions %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(count = exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=",")
my_recipe <- recipe(count ~., data=train_ud) %>%
step_mutate(weather= factor(ifelse(weather == "4", "3", weather),
levels=c("1","2","3"),
labels=c("Clear", "Mist", "Light Snow"))) %>%
step_mutate(season = factor(season, levels=c("1","2","3","4"),
labels=c("Spring","Summer","Fall","Winter"))) %>%
#step_time(datetime, features="am")%>%
step_time(datetime, features="hour") %>%
step_dummy(all_nominal_predictors()) %>%
step_normalize(all_numeric_predictors())
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataSet13
bake(prepped_recipe, new_data=train_ud)
auto_model <- auto_ml() %>%
set_engine("h2o", max_runtime_secs=30, max_models=5) %>%
set_mode("regression")
auto_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(auto_model) %>%
fit(data=train_ud)
## Run all the steps on test data15
auto_predictions <- predict(auto_workflow, new_data = test)
auto_predictions
kaggle_submission <- auto_predictions %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(count = exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=",")
my_recipe <- recipe(count ~., data=train_ud) %>%
step_mutate(weather= factor(ifelse(weather == "4", "3", weather),
levels=c("1","2","3"),
labels=c("Clear", "Mist", "Light Snow"))) %>%
step_mutate(season = factor(season, levels=c("1","2","3","4"),
labels=c("Spring","Summer","Fall","Winter"))) %>%
#step_time(datetime, features="am")%>%
step_time(datetime, features="hour") %>%
step_dummy(all_nominal_predictors()) %>%
step_normalize(all_numeric_predictors())
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataSet13
bake(prepped_recipe, new_data=train_ud)
auto_model <- auto_ml() %>%
set_engine("h2o", max_runtime_secs=30, max_models=10) %>%
set_mode("regression")
auto_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(auto_model) %>%
fit(data=train_ud)
## Run all the steps on test data15
auto_predictions <- predict(auto_workflow, new_data = test)
auto_predictions
kaggle_submission <- auto_predictions %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(count = exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=",")
my_recipe <- recipe(count ~., data=train_ud) %>%
step_mutate(weather= factor(ifelse(weather == "4", "3", weather),
levels=c("1","2","3"),
labels=c("Clear", "Mist", "Light Snow"))) %>%
step_mutate(season = factor(season, levels=c("1","2","3","4"),
labels=c("Spring","Summer","Fall","Winter"))) %>%
#step_time(datetime, features="am")%>%
step_time(datetime, features="hour") %>%
step_dummy(all_nominal_predictors()) %>%
step_normalize(all_numeric_predictors())
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataSet13
bake(prepped_recipe, new_data=train_ud)
auto_model <- auto_ml() %>%
set_engine("h2o", max_runtime_secs=60, max_models=5) %>%
set_mode("regression")
auto_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(auto_model) %>%
fit(data=train_ud)
## Run all the steps on test data15
auto_predictions <- predict(auto_workflow, new_data = test)
auto_predictions
kaggle_submission <- auto_predictions %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(count = exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=",")
my_recipe <- recipe(count ~., data=train_ud) %>%
step_mutate(weather= factor(ifelse(weather == "4", "3", weather),
levels=c("1","2","3"),
labels=c("Clear", "Mist", "Light Snow"))) %>%
step_mutate(season = factor(season, levels=c("1","2","3","4"),
labels=c("Spring","Summer","Fall","Winter"))) %>%
#step_time(datetime, features="am")%>%
step_time(datetime, features="hour") %>%
step_dummy(all_nominal_predictors()) %>%
step_normalize(all_numeric_predictors())
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataSet13
bake(prepped_recipe, new_data=train_ud)
auto_model <- auto_ml() %>%
set_engine("h2o", max_runtime_secs=120, max_models=5) %>%
set_mode("regression")
auto_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(auto_model) %>%
fit(data=train_ud)
## Run all the steps on test data15
auto_predictions <- predict(auto_workflow, new_data = test)
auto_predictions
kaggle_submission <- auto_predictions %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(count = exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=",")
my_recipe <- recipe(count ~., data=train_ud) %>%
step_mutate(weather= factor(ifelse(weather == "4", "3", weather),
levels=c("1","2","3"),
labels=c("Clear", "Mist", "Light Snow"))) %>%
step_mutate(season = factor(season, levels=c("1","2","3","4"),
labels=c("Spring","Summer","Fall","Winter"))) %>%
#step_time(datetime, features="am")%>%
step_time(datetime, features="hour") %>%
step_dummy(all_nominal_predictors()) %>%
step_normalize(all_numeric_predictors())
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataSet13
bake(prepped_recipe, new_data=train_ud)
auto_model <- auto_ml() %>%
set_engine("h2o", max_runtime_secs=45, max_models=5) %>%
set_mode("regression")
auto_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(auto_model) %>%
fit(data=train_ud)
## Run all the steps on test data15
auto_predictions <- predict(auto_workflow, new_data = test)
auto_predictions
kaggle_submission <- auto_predictions %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(count = exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=",")
my_recipe <- recipe(count ~., data=train_ud) %>%
step_mutate(weather= factor(ifelse(weather == "4", "3", weather),
levels=c("1","2","3"),
labels=c("Clear", "Mist", "Light Snow"))) %>%
step_mutate(season = factor(season, levels=c("1","2","3","4"),
labels=c("Spring","Summer","Fall","Winter"))) %>%
#step_time(datetime, features="am")%>%
step_time(datetime, features="hour") %>%
step_dummy(all_nominal_predictors()) %>%
step_normalize(all_numeric_predictors())
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataSet13
bake(prepped_recipe, new_data=train_ud)
auto_model <- auto_ml() %>%
set_engine("h2o", max_runtime_secs=45, max_models=10) %>%
set_mode("regression")
auto_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(auto_model) %>%
fit(data=train_ud)
## Run all the steps on test data15
auto_predictions <- predict(auto_workflow, new_data = test)
auto_predictions
kaggle_submission <- auto_predictions %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(count = exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=",")
my_recipe <- recipe(count ~., data=train_ud) %>%
step_mutate(weather= factor(ifelse(weather == "4", "3", weather),
levels=c("1","2","3"),
labels=c("Clear", "Mist", "Light Snow"))) %>%
step_mutate(season = factor(season, levels=c("1","2","3","4"),
labels=c("Spring","Summer","Fall","Winter"))) %>%
#step_time(datetime, features="am")%>%
step_time(datetime, features="hour") %>%
step_dummy(all_nominal_predictors()) %>%
step_normalize(all_numeric_predictors())
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataSet13
bake(prepped_recipe, new_data=train_ud)
auto_model <- auto_ml() %>%
set_engine("h2o", max_runtime_secs=60, max_models=30) %>%
set_mode("regression")
auto_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(auto_model) %>%
fit(data=train_ud)
## Run all the steps on test data15
auto_predictions <- predict(auto_workflow, new_data = test)
auto_predictions
kaggle_submission <- auto_predictions %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(count = exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=",")
my_recipe <- recipe(count ~., data=train_ud) %>%
step_mutate(weather= factor(ifelse(weather == "4", "3", weather),
levels=c("1","2","3"),
labels=c("Clear", "Mist", "Light Snow"))) %>%
step_mutate(season = factor(season, levels=c("1","2","3","4"),
labels=c("Spring","Summer","Fall","Winter"))) %>%
step_time(datetime, features="am")%>%
step_time(datetime, features="hour") %>%
step_dummy(all_nominal_predictors()) %>%
step_normalize(all_numeric_predictors())
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataSet13
bake(prepped_recipe, new_data=train_ud)
auto_model <- auto_ml() %>%
set_engine("h2o", max_runtime_secs=60, max_models=30) %>%
set_mode("regression")
auto_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(auto_model) %>%
fit(data=train_ud)
## Run all the steps on test data15
auto_predictions <- predict(auto_workflow, new_data = test)
auto_predictions
kaggle_submission <- auto_predictions %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(count = exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=",")
my_recipe <- recipe(count ~., data=train_ud) %>%
step_mutate(weather= factor(ifelse(weather == "4", "3", weather),
levels=c("1","2","3"),
labels=c("Clear", "Mist", "Light Snow"))) %>%
step_mutate(season = factor(season, levels=c("1","2","3","4"),
labels=c("Spring","Summer","Fall","Winter"))) %>%
step_time(datetime, features="am")%>%
step_time(datetime, features="hour") %>%
step_dummy(all_nominal_predictors()) %>%
step_normalize(all_numeric_predictors())
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataSet13
bake(prepped_recipe, new_data=train_ud)
auto_model <- auto_ml() %>%
set_engine("h2o", max_runtime_secs=60, max_models=3) %>%
set_mode("regression")
auto_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(auto_model) %>%
fit(data=train_ud)
## Run all the steps on test data15
auto_predictions <- predict(auto_workflow, new_data = test)
auto_predictions
kaggle_submission <- auto_predictions %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(count = exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=",")
my_recipe <- recipe(count ~., data=train_ud) %>%
step_mutate(weather= factor(ifelse(weather == "4", "3", weather),
levels=c("1","2","3"),
labels=c("Clear", "Mist", "Light Snow"))) %>%
step_mutate(season = factor(season, levels=c("1","2","3","4"),
labels=c("Spring","Summer","Fall","Winter"))) %>%
step_time(datetime, features="am")%>%
step_time(datetime, features="hour") %>%
step_dummy(all_nominal_predictors()) %>%
step_normalize(all_numeric_predictors())
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataSet13
bake(prepped_recipe, new_data=train_ud)
auto_model <- auto_ml() %>%
set_engine("h2o", max_runtime_secs=60, max_models=1) %>%
set_mode("regression")
auto_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(auto_model) %>%
fit(data=train_ud)
## Run all the steps on test data15
auto_predictions <- predict(auto_workflow, new_data = test)
auto_predictions
kaggle_submission <- auto_predictions %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(count = exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=",")
my_recipe <- recipe(count ~., data=train_ud) %>%
step_mutate(weather= factor(ifelse(weather == "4", "3", weather),
levels=c("1","2","3"),
labels=c("Clear", "Mist", "Light Snow"))) %>%
step_mutate(season = factor(season, levels=c("1","2","3","4"),
labels=c("Spring","Summer","Fall","Winter"))) %>%
step_time(datetime, features="am")%>%
step_time(datetime, features="hour") %>%
step_dummy(all_nominal_predictors()) %>%
step_normalize(all_numeric_predictors())
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataSet13
bake(prepped_recipe, new_data=train_ud)
auto_model <- auto_ml() %>%
set_engine("h2o", max_runtime_secs=120, max_models=5) %>%
set_mode("regression")
auto_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(auto_model) %>%
fit(data=train_ud)
## Run all the steps on test data15
auto_predictions <- predict(auto_workflow, new_data = test)
auto_predictions
kaggle_submission <- auto_predictions %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(count = exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=",")
my_recipe <- recipe(count ~., data=train_ud) %>%
step_mutate(weather= factor(ifelse(weather == "4", "3", weather),
levels=c("1","2","3"),
labels=c("Clear", "Mist", "Light Snow"))) %>%
step_mutate(season = factor(season, levels=c("1","2","3","4"),
labels=c("Spring","Summer","Fall","Winter"))) %>%
#step_time(datetime, features="am")%>%
step_time(datetime, features="hour") %>%
step_dummy(all_nominal_predictors()) %>%
step_normalize(all_numeric_predictors())
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataSet13
bake(prepped_recipe, new_data=train_ud)
auto_model <- auto_ml() %>%
set_engine("h2o", max_runtime_secs=120, max_models=10) %>%
set_mode("regression")
auto_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(auto_model) %>%
fit(data=train_ud)
## Run all the steps on test data15
auto_predictions <- predict(auto_workflow, new_data = test)
auto_predictions
kaggle_submission <- auto_predictions %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(count = exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=",")
my_recipe <- recipe(count ~., data=train_ud) %>%
step_mutate(weather= factor(ifelse(weather == "4", "3", weather),
levels=c("1","2","3"),
labels=c("Clear", "Mist", "Light Snow"))) %>%
step_mutate(season = factor(season, levels=c("1","2","3","4"),
labels=c("Spring","Summer","Fall","Winter"))) %>%
#step_time(datetime, features="am")%>%
step_time(datetime, features="hour") %>%
step_dummy(all_nominal_predictors()) %>%
step_normalize(all_numeric_predictors())
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataSet13
bake(prepped_recipe, new_data=train_ud)
auto_model <- auto_ml() %>%
set_engine("h2o", max_runtime_secs=240, max_models=5) %>%
set_mode("regression")
auto_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(auto_model) %>%
fit(data=train_ud)
## Run all the steps on test data15
auto_predictions <- predict(auto_workflow, new_data = test)
auto_predictions
kaggle_submission <- auto_predictions %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(count = exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=",")
my_recipe <- recipe(count ~., data=train_ud) %>%
step_mutate(weather= factor(ifelse(weather == "4", "3", weather),
levels=c("1","2","3"),
labels=c("Clear", "Mist", "Light Snow"))) %>%
step_mutate(season = factor(season, levels=c("1","2","3","4"),
labels=c("Spring","Summer","Fall","Winter"))) %>%
step_time(datetime, features="am")%>%
step_time(datetime, features="hour") %>%
step_dummy(all_nominal_predictors()) %>%
step_normalize(all_numeric_predictors())
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataSet13
bake(prepped_recipe, new_data=train_ud)
auto_model <- auto_ml() %>%
set_engine("h2o", max_runtime_secs=240, max_models=5) %>%
set_mode("regression")
auto_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(auto_model) %>%
fit(data=train_ud)
## Run all the steps on test data15
auto_predictions <- predict(auto_workflow, new_data = test)
auto_predictions
kaggle_submission <- auto_predictions %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(count = exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=",")
my_recipe <- recipe(count ~., data=train_ud) %>%
step_mutate(weather= factor(ifelse(weather == "4", "3", weather),
levels=c("1","2","3"),
labels=c("Clear", "Mist", "Light Snow"))) %>%
step_mutate(season = factor(season, levels=c("1","2","3","4"),
labels=c("Spring","Summer","Fall","Winter"))) %>%
step_time(datetime, features="hour") %>%
step_time(datetime, features="minute")%>%
step_dummy(all_nominal_predictors()) %>%
step_normalize(all_numeric_predictors())
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataSet13
bake(prepped_recipe, new_data=train_ud)
auto_model <- auto_ml() %>%
set_engine("h2o", max_runtime_secs=240, max_models=5) %>%
set_mode("regression")
auto_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(auto_model) %>%
fit(data=train_ud)
## Run all the steps on test data15
auto_predictions <- predict(auto_workflow, new_data = test)
auto_predictions
kaggle_submission <- auto_predictions %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(count=pmax(0, count)) %>%
mutate(count = exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=kaggle_submission, file="./LinearPreds.csv", delim=",")
